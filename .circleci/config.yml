# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  test:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/jsenon/k8sslackevent
    steps:
      - checkout
      - restore_cache:
          key: dep-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
      - run: 
          name: Get dependencies
          command: |
            go get -u github.com/golang/dep/cmd/dep
            dep ensure -vendor-only
      - save_cache:
          key: dep-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor
      - run: 
          name: Test
          command: |
            go test -v ./...
      - run: 
          name: Lint
          command: |
            go get -u github.com/golangci/golangci-lint/cmd/golangci-lint
            golangci-lint -v run
      - run: 
          name: Code Coverage
          command: |
            bash <(curl -s https://codecov.io/bash)
  build:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/jsenon/k8sslackevent
    steps:
      - checkout
      - restore_cache:
          key: dep-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
      - run: 
          name: Build App
          command: |
            CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bin/k8sslackevent
      - persist_to_workspace:
          root: bin
          paths:
            - k8sslackevent
  push:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/jsenon/k8sslackevent
    steps:
      - checkout
      - attach_workspace:
          at: bin
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build -t $DOCKER_USER/k8sslackevent:latest .
      - run: 
          name: DockerHub Login
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Push to registry
          command: |
            docker push $DOCKER_USER/k8sslackevent:latest
workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - build:
          requires:
            - test
      - push:
          requires:
            - test
            - build
          filters:
            branches:
              only: 
                - master
                - feature/ci